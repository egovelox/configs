########################################
# STATUS BAR
########################################
# %hidden ALACRITTY_BG="#1d1f21" ## vim black
%hidden ALACRITTY_BG="#222626" ## mat green black
%hidden ALACRITTY_FG="#222222"
%hidden RED="#bf616a"
%hidden YELLOW="#a9b53f"
%hidden DEFAULT="default"
%hidden ACTIVE_BG='#81a1c1'
%hidden ACTIVE_FG='#2e3440'

set -g status-position bottom

# position of window list
set -g status-justify left

set -g status-interval 5

set -g status-style "bg=#{ALACRITTY_BG},fg=#{ALACRITTY_FG}"
# Have a different background
#set -g status-style "bg=#4c566a,fg=#eceff4"

# Span status line on 2 lines
set -g status-format[0] '' 
set -g status-format[1] '' 
set -g status-right ''
set -g status-left ''


########################################
# FIRST TOP LINE
########################################

# Set session name #S and current window #I 
# eg. 0:2
set -g status-right "#[fg=#{RED},bg=#{DEFAULT}] #S:#I "

# Set status dynamic data
set -ag status-right "#[fg=#{ACTIVE_BG},bg=#{DEFAULT}] ðŸ”‹#{battery_percentage}#(pmset -g batt | tail -1 | awk '{print $3}' | tr -d ';') #[#{DEFAULT}]"
set -ag status-right "#[fg=#{ACTIVE_BG},bg=#{DEFAULT}]ðŸ‘‹#($HOME/bin/weechat-hotlist-rs hotlist) #[#{DEFAULT}]"
set -ag status-right "#[fg=#{YELLOW},bg=#{DEFAULT}] #($HOME/.tmux/plugins/tmux-plugin-sysstat/scripts/mem.sh) | #($HOME/.tmux/plugins/tmux-plugin-sysstat/scripts/loadavg.sh) #[#{DEFAULT}]"

# Set time
set -ag status-right "#[fg=#{RED},bg=#{DEFAULT}] %a %d #[fg=#{ACTIVE_BG},bg=#{DEFAULT}]%H:%M "

# Set first top line
set -gF status-format[0] '#{status-left}#[align=right]#{status-right}' 


########################################
# SECOND BOTTOM LINE : STATUS WINDOWS BAR
########################################
# For tmux advanced syntax
# see https://man7.org/linux/man-pages/man1/tmux.1.html#NAMES_AND%20TITLES
# For the hack of printing the api-name, whatever the cwd, in the pane label,
# we use ggrep with --perl-regexp as -P
# i.e if the pane_title contains devi, find the string of the pane between DEV/ and /
# should install GNU grep first, and use it as ggrep : brew install grep

%hidden IS_DEV_FOLDER_RGX=/DEV/
# this regex extracts the string located between /DEV/ and /
# if cwd is /Users/me/DEV/my_project/api/
# it extracts my_project
%hidden FIND_PROJECT_NAME_REGX="(?<=/DEV/).*?(?=/)"
# git diff --quiet 
# returns 0 if no changes
# returns 1 if changes
# we echo that to be use in a tmux conditional 
%hidden HAS_GIT_DIFF_CMD='git diff --quiet; echo $?'

%hidden HAS_GIT_DIFF_FG='#cf0a9a'


# Usage of rounded Powerline borders
# https://github.com/ryanoasis/powerline-extra-symbols
# These glyphs are included by default in Hack (Nerd font)
# cf https://unicode-table.com/en/
# search for e0b6 and e0b4
# î‚¶ î‚´

# https://github.com/neovim/neovim/issues/21771
# a fix is to update the pane_path inside neovim (cf init.lua) with a 'file://' notation.
# so we have to check if pane_path, and remove the file:// prefix
setw -g window-status-format '#[fg=#{ACTIVE_FG},bg=#{DEFAULT}]î‚¶#[bg=#{ACTIVE_FG}]#{?#{mr:#{IS_DEV_FOLDER_RGX},#{?pane_path,#{s@^file.//@@:pane_path},#{pane_current_path}}},#{?#(cd #{?pane_path,#{s@^file.//@@:pane_path},#{pane_current_path}}; #{HAS_GIT_DIFF_CMD}),#{#[fg=#{HAS_GIT_DIFF_FG}]#I#[fg=#{ACTIVE_BG}] #(echo #{?pane_path,#{s@^file.//@@:pane_path},#{pane_current_path}}/ | ggrep -Pio "#{FIND_PROJECT_NAME_REGX}")},#{#[fg=#{ACTIVE_BG}]#I#[fg=#{ACTIVE_BG}] #(echo #{?pane_path,#{s@^file.//@@:pane_path},#{pane_current_path}}/ | ggrep -Pio "#{FIND_PROJECT_NAME_REGX}")}},#{#[fg=#{ACTIVE_BG},bg=#{ACTIVE_FG}]#I #{=/-15/â€¦:pane_title}}}#[fg=#{ACTIVE_FG},bg=#{DEFAULT}]î‚´'

setw -g window-status-current-format '#[fg=#{ACTIVE_BG},bg=#{DEFAULT}]î‚¶#[bg=#{ACTIVE_BG}]#{?#{mr:#{IS_DEV_FOLDER_RGX},#{?pane_path,#{s@^file.//@@:pane_path},#{pane_current_path}}},#{?#(cd #{?pane_path,#{s@^file.//@@:pane_path},#{pane_current_path}}; #{HAS_GIT_DIFF_CMD}),#{#[fg=#{HAS_GIT_DIFF_FG}]#I#[fg=#{ACTIVE_FG}] #(echo #{?pane_path,#{s@^file.//@@:pane_path},#{pane_current_path}}/ | ggrep -Pio "#{FIND_PROJECT_NAME_REGX}")},#{#[fg=#{ACTIVE_FG}]#I#[fg=#{ACTIVE_FG}] #(echo #{?pane_path,#{s@^file.//@@:pane_path},#{pane_current_path}}/ | ggrep -Pio "#{FIND_PROJECT_NAME_REGX}")}},#{#[fg=#{ACTIVE_FG},bg=#{ACTIVE_BG}]#I #{=/-15/â€¦:pane_title}}}#[fg=#{ACTIVE_BG},bg=#{DEFAULT}]î‚´'

# Current, same as above without git status
#setw -g window-status-current-format '#[fg=#{ACTIVE_BG},bg=default]î‚¶#[fg=#{ACTIVE_FG},bg=#{ACTIVE_BG},bold]#I #{?#{mr:#{IS_DEV_FOLDER_RGX},#{?pane_path,#{s@^file.//@@:pane_path},#{pane_current_path}}},#{#(echo #{?pane_path,#{s@^file.//@@:pane_path},#{pane_current_path}}/ | ggrep -Pio "#{FIND_PROJECT_NAME_REGX}")},#{=/-15/â€¦:pane_title}}#[fg=#{ACTIVE_BG},bg=default]î‚´'

setw -g window-status-separator ' '

# backup old and plain version
#setw -g window-status-format '#[fg=#{ACTIVE_BG},bg=#{ACTIVE_FG}] #I: #{=/-15/â€¦:pane_title} '
#setw -g window-status-current-format '#[fg=#{ACTIVE_FG},bg=#{ACTIVE_BG},bold] #I: #{=/-15/â€¦:pane_title} '

# Fix pane_title (will be set by alacritty)
set -g set-titles on
set -g set-titles-string "#T"

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

# Set second line
set -g status-format[1] "#[align=left range=left #[norange #{DEFAULT}]#[list=on align=#{status-justify}]#[list=left-marker]<#[list=right-marker]>#[list=on]#{W:#[range=window|#{window_index} #{E:window-status-style}#{?#{&&:#{window_last_flag},#{!=:#{E:window-status-last-style},default}}, #{E:window-status-last-style},}#{?#{&&:#{window_bell_flag},#{!=:#{E:window-status-bell-style},default}}, #{E:window-status-bell-style},#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{E:window-status-activity-style},default}}, #{E:window-status-activity-style},}}]#[push-default]#{T:window-status-format}#[pop-default]#[norange default]#{?window_end_flag,,#{window-status-separator}},#[range=window|#{window_index} list=focus #{?#{!=:#{E:window-status-current-style},default},#{E:window-status-current-style},#{E:window-status-style}}#{?#{&&:#{window_last_flag},#{!=:#{E:window-status-last-style},default}}, #{E:window-status-last-style},}#{?#{&&:#{window_bell_flag},#{!=:#{E:window-status-bell-style},default}}, #{E:window-status-bell-style},#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{E:window-status-activity-style},default}}, #{E:window-status-activity-style},}}]#[push-default]#{T:window-status-current-format}#[pop-default]#[norange list=on #{DEFAULT}]#{?window_end_flag,,#{window-status-separator}}}#[nolist align=right range=right]#[norange #{DEFAULT}]"

# Print first line only
# set -g status on

# Print both lines
set -g status 2

# For fzfp in particular,
# we want windows name to be automatically the pane_title, 
# and if IS_DEV_FOLDER, we want the project name.
# at the end we replace spaces with +, since a window name cannot have spaces
# gnu grep is also required here
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{?#{mr:#{IS_DEV_FOLDER_RGX},#{pane_current_path}},#(echo #{pane_current_path}/ | ggrep -Pio "#{FIND_PROJECT_NAME_REGX}"),#{s/ /+/:pane_title}}'
