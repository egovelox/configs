########################################
# STATUS BAR
# to understand the syntax of this file, you should read first :
# https://github.com/tmux/tmux/wiki/Formats
# For tmux advanced syntax
# see https://man7.org/linux/man-pages/man1/tmux.1.html#NAMES_AND%20TITLES

# prerequisite :
# first install GNU grep ( brew install grep ),
# brew will then automatically make it available as ggrep.
########################################

%hidden HOTLIST='$HOME/bin/slackrope hotlist -t "\033[38;5;208m󰁥\e[0m{{priority_3}} \e[38;5;200m\e[0m{{priority_2}} \e[38;5;112m\e[0m{{priority_1}}"'
%hidden ALACRITTY_BG="#222626"
%hidden ALACRITTY_FG="#222222"
%hidden YELLOW="#a9b53f"
%hidden DEFAULT="default"
%hidden ACTIVE_BG='#81a1c1'
%hidden ACTIVE_FG='#2e3440'
%hidden IS_DEV_FOLDER_RGX=/DEV/
# This regex will be use with the command `ggrep --only-matching --perl-regexp --ignore-case` ( see below )
# It will extract the string located
# between /DEV/ and /
# OR between /DEV/exo/ and /
# OR etc.
# Example
# if cwd is /Users/me/DEV/my_project/api/
# it will extract my_project
%hidden FIND_PROJECT_NAME_REGX="\
(?<=/DEV/)(?!\bexo\b|fabernovel|\bC\b|rust|golang|python|mdn|aws|deno|zig|algo).*?(?=/)\
|(?<=/DEV/exo/).*?(?=/)\
|(?<=/DEV/fabernovel/).*?(?=/)\
|(?<=/DEV/C/).*?(?=/)\
|(?<=/DEV/rust/).*?(?=/)\
|(?<=/DEV/golang/).*?(?=/)\
|(?<=/DEV/python/).*?(?=/)\
|(?<=/DEV/mdn/).*?(?=/)\
|(?<=/DEV/aws/).*?(?=/)\
|(?<=/DEV/deno/).*?(?=/)\
|(?<=/DEV/zig/).*?(?=/)\
|(?<=/DEV/algo/).*?(?=/)\
"

# git diff --quiet 
# returns 0 if no changes
# returns 1 if changes
# we echo that to be use in a tmux conditional
%hidden HAS_GIT_DIFF_CMD='git diff --quiet; echo $?'
%hidden MAGENTA='#a6077b'
%hidden GREEN='#32a87d'
%hidden ORANGE='#cf6f0e'

set -g status-position bottom
set -g status-interval 5
set -g status-style "bg=#{ALACRITTY_BG},fg=#{ALACRITTY_FG}"

# Span status line on 2 lines
set -g status-format[0] ''
set -g status-format[1] ''
set -g status-right ''
set -g status-left ''

########################################
# FIRST TOP LINE
########################################

# Set session name #S and current window #I 
# eg. 0:2
# Set status dynamic data
set -g status-right "#[fg=#{GREEN},bg=#{DEFAULT}] #S:#I "

# Set slackrope for slack
# 󰁥you 󰁥all 󰁥channel messages
set -g status-left "#[fg=#{ACTIVE_BG},bg=#{DEFAULT}]#(#{HOTLIST} | sed -r 's/\\[38;5;208m/#[fg=#{ORANGE}]/g' | sed -r 's/\\[38;5;200m/#[fg=#{MAGENTA}]/g' | sed -r 's/\\[38;5;112m/#[fg=#{GREEN}]/g' | sed -r 's/\\[0m/#[fg=#{ACTIVE_BG}]/g') #[#{DEFAULT}]"

# Set system indicators
set -g @df_cmd_private1 "/System/Volumes/Data"
set -ag status-right "#[fg=#{GREEN},bg=#{DEFAULT}]#[fg=#{GREEN}]#{battery_percentage}#(pmset -g batt | tail -1 | awk '{print $3}' | tr -d ';') #[#{DEFAULT}]"
set -ag status-right "#[fg=#{GREEN},bg=#{DEFAULT}]#[fg=#{GREEN}]#{df_percent_private1}[#{df_avail_private1}] #[#{DEFAULT}]"
set -ag status-right "#[fg=#{YELLOW},bg=#{DEFAULT}]#($HOME/.tmux/plugins/tmux-plugin-sysstat/scripts/mem.sh) | #($HOME/.tmux/plugins/tmux-plugin-sysstat/scripts/loadavg.sh) #[#{DEFAULT}]"

# Set time
set -ag status-right "#[fg=#{GREEN},bg=#{DEFAULT}]%a %d #[fg=#{YELLOW},bg=#{DEFAULT}]%H:%M "

# Set first top line
set -gF status-format[0] '#{status-left}#[align=right]#{status-right}'

set -g base-index 1
# make window/pane index start with 1
setw -g pane-base-index 1

########################################
# SECOND BOTTOM LINE : STATUS WINDOWS BAR
########################################

# For the hack of printing the api-name, whatever the cwd, in the pane label,
# we use ggrep with --perl-regexp as -P
# that's why you should install GNU grep first, and use it as ggrep : brew install grep

# Usage of rounded Powerline borders
# https://github.com/ryanoasis/powerline-extra-symbols
# These glyphs are included by default in Hack (Nerd font)
# cf https://unicode-table.com/en/
# search for e0b6 and e0b4
#  

set -g @panepath "#{?pane_path,#{pane_path},#{pane_current_path}}"
set -g @isdevfolder "#{mr:#{IS_DEV_FOLDER_RGX},#{E:@panepath}}"
set -g @hasgitdiff '#(cd #{E:@panepath}; #{HAS_GIT_DIFF_CMD})'
set -g @projectname '#(echo #{E:@panepath}/ | ggrep --only-matching --perl-regexp --ignore-case "#{FIND_PROJECT_NAME_REGX}")'

# window-status and window-status-current have same logic, but alternate colors.
setw -g window-status-format '#[fg=#{ACTIVE_FG},bg=#{DEFAULT}]#[bg=#{ACTIVE_FG}]#{?#{E:@isdevfolder},#{?#{E:@hasgitdiff},#{#[fg=#{MAGENTA}]#I#[fg=#{ACTIVE_BG}] #{E:@projectname}},#{#[fg=#{ACTIVE_BG}]#I#[fg=#{ACTIVE_BG}] #{E:@projectname}}},#{#[fg=#{ACTIVE_BG},bg=#{ACTIVE_FG}]#I #{=/-15/…:pane_title}}}#[fg=#{ACTIVE_FG},bg=#{DEFAULT}]'
setw -g window-status-current-format '#[fg=#{ACTIVE_BG},bg=#{DEFAULT}]#[bg=#{ACTIVE_BG}]#{?#{E:@isdevfolder},#{?#{E:@hasgitdiff},#{#[fg=#{MAGENTA}]#I#[fg=#{ACTIVE_FG}] #{E:@projectname}},#{#[fg=#{ACTIVE_FG}]#I#[fg=#{ACTIVE_FG}] #{E:@projectname}}},#{#[fg=#{ACTIVE_FG},bg=#{ACTIVE_BG}]#I #{=/-15/…:pane_title}}}#[fg=#{ACTIVE_BG},bg=#{DEFAULT}]'
setw -g window-status-separator ' '

# backup old and plain version
#setw -g window-status-format '#[fg=#{ACTIVE_BG},bg=#{ACTIVE_FG}] #I: #{=/-15/…:pane_title} '
#setw -g window-status-current-format '#[fg=#{ACTIVE_FG},bg=#{ACTIVE_BG},bold] #I: #{=/-15/…:pane_title} '

# Set second line
# This awkward string was taken from tmux default status-format[0]
# just adapted to get our desired status-format[1]
# Basically it does a loop on every window ( using W: )
# and sets the window-status-format or window-status-current-format (see above)
set -g status-format[1] "#[align=left range=left #[norange #{DEFAULT}]#[list=on align=#{status-justify}]#[list=left-marker]<#[list=right-marker]>#[list=on]#{W:#[range=window|#{window_index} #{E:window-status-style}#{?#{&&:#{window_last_flag},#{!=:#{E:window-status-last-style},default}}, #{E:window-status-last-style},}#{?#{&&:#{window_bell_flag},#{!=:#{E:window-status-bell-style},default}}, #{E:window-status-bell-style},#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{E:window-status-activity-style},default}}, #{E:window-status-activity-style},}}]#[push-default]#{T:window-status-format}#[pop-default]#[norange default]#{?window_end_flag,,#{window-status-separator}},#[range=window|#{window_index} list=focus #{?#{!=:#{E:window-status-current-style},default},#{E:window-status-current-style},#{E:window-status-style}}#{?#{&&:#{window_last_flag},#{!=:#{E:window-status-last-style},default}}, #{E:window-status-last-style},}#{?#{&&:#{window_bell_flag},#{!=:#{E:window-status-bell-style},default}}, #{E:window-status-bell-style},#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{E:window-status-activity-style},default}}, #{E:window-status-activity-style},}}]#[push-default]#{T:window-status-current-format}#[pop-default]#[norange list=on #{DEFAULT}]#{?window_end_flag,,#{window-status-separator}}}#[nolist align=right range=right]#[norange #{DEFAULT}]"

# Debug print first line only: 
# set -g status on

# Print both status lines
set -g status 2

########################################
# OTHER SETTINGS
########################################

# Fix pane_title (will be set by alacritty)
set -g set-titles on
set -g set-titles-string "#T"

# For fzfp in particular,
# we want windows name to be automatically the pane_title, 
# and if IS_DEV_FOLDER, we want the project name.
# at the end we replace spaces with +, since a window name cannot have spaces
# gnu grep is also required here
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{?#{E:@isdevfolder},#{E:@projectname},#{s/ /+/:pane_title}}'
