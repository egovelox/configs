######################################## 
# KEY BINDINGS
########################################


# Change tmux default prefix key (C-b)
# to the old GNU Screen prefix key of C-a.
unbind C-b
set -g prefix C-a
# Allow to send the prefix to another program
bind C-a send-prefix

# key to reload config
bind r source-file $HOME/.tmux.conf \; display "Config Reloaded!"


# Command + H/L
# Keys to change pane or change window
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

unbind u
bind u run $HOME/bin/tmux-url-select

# Command + M/N
# split window
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# copy to macOS clipboard
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe 'pbcopy &> /dev/null'
# Press Enter to quit copy-mode-vi (as well as default 'q')
bind -T copy-mode-vi Enter send-keys -X cancel

# use fzf-tmux to display all windows and switch to selected window
%hidden FZF="fzf-tmux -p 30% -- --no-bold --layout=reverse --margin 0% --no-separator --no-info --black --color bg+:black,hl:reverse,hl+:reverse,gutter:black"

# Command + S (alacritty mapping)
# tmux switch a window with fzf
bind-key t run-shell 'tmux list-windows -a | cut -d" " -f1,2 | while read -r line; do echo $line | sed -e "s/: / /" -e "s/+/ /g" ; done | #{FZF} --prompt="switch window: " | cut -d" " -f1 | xargs tmux switch -t'

# Command + K (alacritty mapping)
# tmux kill a window with fzf
bind-key k run-shell 'tmux list-windows -a | cut -d" " -f1,2 | while read -r line; do echo $line | sed -e "s/: / /" -e "s/+/ /g" ; done | #{FZF} --multi --prompt "kill window: " | while read line; do echo "$line" | cut -d" " -f1 | xargs tmux killw -t; done'

unbind x
set -g @fzf-url-bind 'y'
set -g @fzf-url-fzf-options '-p 30% -- --no-bold --layout=reverse --margin 0% --no-separator --no-info --black --color bg+:black,hl:reverse,hl+:reverse,gutter:black'
########################################
# STATUS BAR
########################################

# Status bar
set -g status-position bottom
# Display status line on 2 lines
# set -g status 2
# position of window list
set -g status-justify left
set -g status-interval 5
set -g status-style "bg=#1d1f21,fg=#eceff4"
# Have a different background
# set -g status-style "bg=#4c566a,fg=#eceff4"

# Display session name
set -g status-left "#[fg=#bf616a,bg=default] #S "
# tmux-mem-cpu-load
# --averages-count 1 # will only display cpu-last-minute-average 
# --graph-lines 5 # will disply first bar if cpu-load > 20% 
# --interval should be set to corresponding tmux status-interval
# ebcb8b
#[fg=#2e3440,bg=#81a1c1,bold]

# Display the battery percentage (Mac OS)
set -g status-right "#[fg=#81a1c1,bg=default,bright] üîã #(pmset -g batt | tail -1 | awk '{print $3}' | tr -d ';') #[default]"

# removed tmux-mem-cpu-load...
#(tmux-mem-cpu-load -m 2 --averages-count 1 --graph-lines 5 --interval 2)

# ...and prefer relying on https://github.com/samoshkin/tmux-plugin-sysstat
set -g @sysstat_mem_view_tmpl '#{mem.used} / #{mem.total}'
set -g @sysstat_cpu_view_tmpl '#{cpu.pused}'
set -ag status-right "#{prefix_highlight} #[fg=#A9B53F,bg=default] ‚öôÔ∏è #{sysstat_mem} | #{sysstat_loadavg} " 
set -g status-right-length 70
set -ga status-right "#{prefix_highlight} #[fg=#bf616a,bg=default] %a %d %H:%M "

# For tmux advanced syntax
# see https://man7.org/linux/man-pages/man1/tmux.1.html#NAMES_AND%20TITLES
# For the hack of printing the api-name, whatever the cwd, in the pane label,
# we use ggrep with --perl-regexp as -P
# i.e if the pane_title contains devi, find the string of the pane_current_path between DEV/ and /
# should install GNU grep first, and use it as ggrep : brew install grep

%hidden IS_DEV_FOLDER_RGX=/DEV/
# this regex extracts the string located between /DEV/ and /
# if cwd is /Users/me/DEV/my_project/api/
# it extracts my_project
%hidden FIND_PROJECT_NAME_REGX="(?<=/DEV/).*?(?=/)"
# git diff --quiet 
# returns 0 if no changes
# returns 1 if changes
# we echo that to be use in a tmux conditional 
%hidden HAS_GIT_DIFF_CMD='git diff --quiet; echo $?'

%hidden ACTIVE_BG='#81a1c1'
%hidden ACTIVE_FG='#2e3440'
%hidden HAS_GIT_DIFF_FG='#cf0a9a'


# Usage of rounded Powerline borders
# https://github.com/ryanoasis/powerline-extra-symbols
# These glyphs are included by default in Hack (Nerd font)
# cf https://unicode-table.com/en/
# search for e0b6 and e0b4

setw -g window-status-format '#[fg=#{ACTIVE_FG},bg=default]ÓÇ∂#[bg=#{ACTIVE_FG}]#{?#{mr:#{IS_DEV_FOLDER_RGX},#{pane_current_path}},#{?#(cd #{pane_current_path}; #{HAS_GIT_DIFF_CMD}),#{#[fg=#{HAS_GIT_DIFF_FG}]#I#[fg=#{ACTIVE_BG}] #(echo #{pane_current_path}/ | ggrep -Pio "#{FIND_PROJECT_NAME_REGX}")},#{#[fg=#{ACTIVE_BG}]#I#[fg=#{ACTIVE_BG}] #(echo #{pane_current_path}/ | ggrep -Pio "#{FIND_PROJECT_NAME_REGX}")}},#{#[fg=#{ACTIVE_BG},bg=#{ACTIVE_FG}]#I #{=/-15/‚Ä¶:pane_title}}}#[fg=#{ACTIVE_FG},bg=default]ÓÇ¥'
setw -g window-status-current-format '#[fg=#{ACTIVE_BG},bg=default]ÓÇ∂#[bg=#{ACTIVE_BG}]#{?#{mr:#{IS_DEV_FOLDER_RGX},#{pane_current_path}},#{?#(cd #{pane_current_path}; #{HAS_GIT_DIFF_CMD}),#{#[fg=#{HAS_GIT_DIFF_FG},bold]#I#[fg=#{ACTIVE_FG},bold] #(echo #{pane_current_path}/ | ggrep -Pio "#{FIND_PROJECT_NAME_REGX}")},#{#[fg=#{ACTIVE_FG},bold]#I#[fg=#{ACTIVE_FG},bold] #(echo #{pane_current_path}/ | ggrep -Pio "#{FIND_PROJECT_NAME_REGX}")}},#{#[fg=#{ACTIVE_FG},bg=#{ACTIVE_BG},bold]#I #{=/-15/‚Ä¶:pane_title}}}#[fg=#{ACTIVE_BG},bg=default]ÓÇ¥'

# Current, same as above without git status
#setw -g window-status-current-format '#[fg=#{ACTIVE_BG},bg=default]ÓÇ∂#[fg=#{ACTIVE_FG},bg=#{ACTIVE_BG},bold]#I #{?#{mr:#{IS_DEV_FOLDER_RGX},#{pane_current_path}},#{#(echo #{pane_current_path}/ | ggrep -Pio "#{FIND_PROJECT_NAME_REGX}")},#{=/-15/‚Ä¶:pane_title}}#[fg=#{ACTIVE_BG},bg=default]ÓÇ¥'

setw -g window-status-separator ' '
# old and plain version
#setw -g window-status-format '#[fg=#81a1c1,bg=#2c3445] #I: #{=/-15/‚Ä¶:pane_title} '
#setw -g window-status-current-format '#[fg=#2e3440,bg=#81a1c1,bold] #I: #{=/-15/‚Ä¶:pane_title} '

# Fix pane_title (will be set by alacritty)
set -g set-titles on
set -g set-titles-string "#T"

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1


########################################
# OTHER SETTINGS
########################################

# For fzfp in particular,
# we want windows name to be automatically the pane_title, 
# and if IS_DEV_FOLDER, we want the project name.
# at the end we replace spaces with +, since a window name cannot have spaces
# gnu grep is also required here
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{?#{mr:#{IS_DEV_FOLDER_RGX},#{pane_current_path}},#(echo #{pane_current_path}/ | ggrep -Pio "#{FIND_PROJECT_NAME_REGX}"),#{s/ /+/:pane_title}}'

# default shell
set -g default-shell /usr/local/bin/fish
set -g default-command /usr/local/bin/fish

# helps in faster key repetition Avoid ESC delay
# Ignore it for now
#set -sg escape-time 0

# set scroll history to 100,000 lines
set-option -g history-limit 100000

# Vim mode
# To enter, use default enter binding : prefix-[
# It should be remap to Command ] in alacritty
# To quit, use default quit binding : q
setw -g mode-keys vi

# Mouse friendly
set -g mouse on



#bind-key t run-shell 'echo hello | fzfp'
########################################
# TPM SETTINGS
########################################
# required: git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
# set -g @plugin 'tmux-plugins/tmux-open'
# remember 
# I modified the below plugin, in fzf-url.sh
# adding
# [ -z "${chosen[0]}" ] && tmux display 'tmux-fzf-url: no URLs chosen' && exit
# before line :
# for item in "${chosen[@]}"; do
# This way, fzf can gracefully exit with escape (no url selected) 
set -g @plugin 'wfxr/tmux-fzf-url'

#set -g @plugin 'sainnhe/tmux-fzf'
#set -g @treemux-tree-nvim-init-file '~/.tmux/plugins/treemux/configs/treemux_init.vim'
#set -g @plugin 'kiyoon/treemux'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
